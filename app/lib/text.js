module.exports.TextParser=class t{constructor(t){if(void 0===t||!t.toString)throw new Error("TextParser only works with strings and values that can be coerced into a string");this.text=t.toString(),this.original=t.toString()}removeHTML(){return this.text=this.text.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/gi," "),this}removeHTMLexceptFormatting(){return this.text=this.text.replace(/<[^>bia]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/gi," "),this}removeDoubleSpacing(){return this.text=this.text.replace(/\s+/g," "),this}removeNonLetters(){return this.text=this.text.replace(/&amp;/g,"og").replace(/[.,()"'!;\n\r]/g," ").replace(/&amp;|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/gi," ").replace("Â "," ").replace("  "," "),this}static fnRemoveNonLetters(t){return t.replace(/&amp;/g,"og").replace(/[.,()"'!;\n\r]/g," ").replace(/&amp;|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/gi," ").replace("  "," ")}removePunctuation(){return this.text=t.fnRemovePunctuation(this.text),this}static fnRemovePunctuation(t){return t.replace(/[.,/#!?"$%^*;:{}«»=_`~()]/g," ").replace("  "," ")}convLowerCase(){return this.text=this.text.toLowerCase(),void 0!==this.words&&this.words.forEach((t=>t.toLowerCase())),this}convUpperCase(){return this.text=this.text.toUpperCase(),void 0!==this.words&&this.words.forEach((t=>t.toUpperCase())),this}trimText(){return this.text=this.text.trim(),void 0!==this.words&&this.words.forEach((t=>t.trim())),this}removeWords(t){return t.forEach((t=>{const e=new RegExp(`\\s${t}\\s`,"ig");this.text=this.text.replaceAll(e," ")})),this.removeDoubleSpacing(),this}titleCaseAllWords(){return this.words.map((t=>t[0].toUpperCase()+t.slice(1))),this}static fnTitleCaseWord(t){return t[0].toUpperCase()+t.slice(1)}getSentences(){return this.sentences=this.text.replace(/[.?!:;](\s|$)/g,"$1|x").split("|x").filter((t=>t.length>0)),console.log(this.text),this.sentenceCount=this.sentences.length,this}getWords(e=6){return this.words=t.fnRemoveNonLetters(this.text).split(/\s+/).filter((t=>""!==t)),this.wordCount=this.words.length,this.longWords=this.words.filter((t=>t.length>e)),this.longWordCount=this.longWords.length,this}countCharacters(){return this.charsNoSpaces=this.text.length,this.charsWithSpaces=this.text.split(" ").join("").length,this}removeDuplicates(t=this.words){if(t.length<=1)return 0;if(t[0].length>1){const e=new Set(t.map((t=>JSON.stringify(t))));return Array.from(e).map((t=>JSON.parse(t)))}return t.sort().filter(((t,e,r)=>t!==r[e-1]))}static generateFrequencyMap(t){const e={};return t.forEach((t=>{e[t]=(e[t]||0)+1})),e}static compareSecondColumn(t,e){return t[1]===e[1]?0:t[1]>e[1]?-1:1}static lemmafyWord(t,e){const r=e[t];return void 0===r?t:r}lemmafyText(e){return 0===e.length?(console.log("ERR: No lemma lookup file provided"),this):(0===this.words.length&&this.getWords(),this.words=this.words.map((r=>t.lemmafyWord(r,e))),this)}static convertValToEmoji(t){try{switch(!0){case t<2:return"🤬";case t<3:return"😡";case t<4:return"😠";case t<5:return"😐";case t<6:return"🙂";case t<7:return"😄";case t<8:return"😁";case t<9:return"🤩";default:return"🤷‍♂️"}}catch(t){return console.log(t),"🤷‍♂️"}}};