class TextHighlighter{constructor(t,e=[]){if(void 0===t||!t.toString)throw new Error("TextHighlighter only works with strings and values that can be coerced into a string");this.text=t.toString(),this.original=t.toString(),this.dict=e,this.id=Number(Math.floor(1e8+9e8*Math.random())),this.formatting=[],this.replacements=[],this.errors={}}removeHTMLexceptFormatting(){return this.text=this.text.replace(/<\/?[^bia/][^>]*(>|$)/g," ").trim(),this}removeAndStoreFormatting(){const t=/<[^>]*(>|$)/;let e,i=0,s=0;function r(t,e,i){const s=t.substring(i||0).search(e);return s>=0?s+(i||0):s}do{e=r(this.text,t,i),console.log("findIndex",e);let n=this.text.charAt(e);for(console.log("currentChar",n),s=e+1;">"!==n;)s+=1,n=this.text.charAt(s),console.log("currentChar",n);const h=this.text.slice(e,s+1);e>-1&&this.formatting.push([h,e,s-e+1]),i=e+1}while(i>0)}findAndReplaceLight(t,e,i,s){function r(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}return t.forEach((t=>{if(t[0].length>0){const n=Array.isArray(t)?r(String(t[0])):r(String(t)),h=new RegExp("(\\s|\\.|\\,|\\!|\\?|\\(|\\)|\\'|\\\"|^)"+n+"(\\s|\\.|\\,|\\!|\\?|\\(|\\)|\\'|\\\"|$)","gi");if(h.test(this.text)){const t=RegExp["$&"].trim(),r=t.replace(/[.,/#!?"'$%^&*;:{}=_`~()]/g,""),n=` <span class="${s}" data-bs-toggle="popover" data-bs-original-title="${`${e} <span class='badge bg-${s} ms-2'>${r}</span>`}" data-bs-html="true" data-bs-content="${i}">${t}</span> `;this.updateID(),this.replacements.push([this.id,n,e])}this.text=this.text.replaceAll(h,String(this.id))}})),this}reconvertTextLight(t=this.replacements){return t.forEach((t=>{const e=new RegExp(t[0],"g");e.test(this.text)&&(this.text=this.text.replace(e,t[1]))})),this}findAndReplace(){const t={Generelt:0,Stavefejl:0,Fyldeord:0,Anglicisme:0,Kliche:0,Dobbeltkonfekt:0,Buzzword:0,Formelt:0,"Typisk anvendt forkert":0,Grammatik:0};for(let e=0;e<this.dict.length;e+=1){let[i,s,r,n,h,a]=[this.dict[e][1],this.dict[e][2],this.dict[e][3],this.dict[e][4],this.dict[e][5],this.dict[e][6]],o=i;1===h&&(o="(\\s|\\.|\\,|\\!|\\?|\\(|\\)|\\'|\\\"|^)"+o),null===r&&(r=""),1===a&&(o+="(\\s|\\.|\\,|\\!|\\?|\\(|\\)|\\'|\\\"|$)"),o=`(${o})`;const l=0===n?new RegExp(o,"g"):new RegExp(o,"gi");if(l.test(this.text)){let e=RegExp["$&"];e=e.trim(),t[s]+=1;const i=` <span class="${s.toLowerCase().replace(" ","")}" \n        data-bs-toggle="popover" \n        data-bs-original-title="${`${s}`}"\n        data-bs-html="true" \n        data-bs-content="${r}"> `,n=e,h="</span>",a=i+n+h;this.updateID(),this.replacements.push([this.id,a,s,0,i.length,n.length,h.length]),this.text=this.text.replaceAll(l,String(this.id))}}return this.errors=t,this}reconvertText(){0===this.replacements.length&&this.findAndReplace(),this.replacements.forEach((t=>{const e=new RegExp(t[0],"g");e.test(this.text)&&(this.text=this.text.replace(e,t[1]))}))}updateID(){this.id+=1}}module.exports.TextHighlighter=TextHighlighter;